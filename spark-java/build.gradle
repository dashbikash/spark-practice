/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}
ext {
    sparkVersion = '4.0.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

	// https://mvnrepository.com/artifact/org.apache.spark/spark-core
	implementation "org.apache.spark:spark-core_2.13:${sparkVersion}"

	// https://mvnrepository.com/artifact/org.apache.spark/spark-sql
	implementation "org.apache.spark:spark-sql_2.13:${sparkVersion}"

	// https://mvnrepository.com/artifact/org.apache.spark/spark-streaming
	implementation "org.apache.spark:spark-streaming_2.13:${sparkVersion}"

	
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'dashbikash.spark.etl.SparkETLApp'

    // Pass log4j configuration to Spark with an absolute path
    applicationDefaultJvmArgs = [
        "-Dlog4j.configuration=file:${projectDir}/src/main/resources/log4j.properties"
    ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}